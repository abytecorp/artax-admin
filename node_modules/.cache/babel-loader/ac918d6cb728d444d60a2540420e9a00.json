{"ast":null,"code":"import _classCallCheck from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bryanmurcia/Documents/GitHub/artax-app/src/views/ui-components/popover.js\";\nimport React from 'react';\nimport { Button, Popover, PopoverHeader, PopoverBody, Card, CardBody, CardTitle, Row, Col } from 'reactstrap';\n\nvar PopoverItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopoverItem, _React$Component);\n\n  function PopoverItem(props) {\n    var _this;\n\n    _classCallCheck(this, PopoverItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopoverItem).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      'popoverOpen': false\n    };\n    return _this;\n  }\n\n  _createClass(PopoverItem, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        'popoverOpen': !this.state.popoverOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"mr-1\",\n        color: \"secondary\",\n        id: \"Popover-\".concat(this.props.id),\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.item.text), React.createElement(Popover, {\n        placement: this.props.item.placement,\n        isOpen: this.state.popoverOpen,\n        target: \"Popover-\".concat(this.props.id),\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(PopoverHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Popover Title\"), React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\")));\n    }\n  }]);\n\n  return PopoverItem;\n}(React.Component);\n\nvar PopoverComponent =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PopoverComponent, _React$Component2);\n\n  function PopoverComponent(props) {\n    var _this2;\n\n    _classCallCheck(this, PopoverComponent);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(PopoverComponent).call(this, props));\n    _this2.state = {\n      'popovers': [{\n        'placement': 'top',\n        'text': 'Top'\n      }, {\n        'placement': 'bottom',\n        'text': 'Bottom'\n      }, {\n        'placement': 'left',\n        'text': 'Left'\n      }, {\n        'placement': 'right',\n        'text': 'Right'\n      }]\n    };\n    return _this2;\n  }\n\n  _createClass(PopoverComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        className: \"bg-light border-bottom p-3 mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-priority-high mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" \"), \"Popovers\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.popovers.map(function (popover, i) {\n        return React.createElement(PopoverItem, {\n          key: i,\n          item: popover,\n          id: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return PopoverComponent;\n}(React.Component);\n\nexport default PopoverComponent;","map":{"version":3,"sources":["/Users/bryanmurcia/Documents/GitHub/artax-app/src/views/ui-components/popover.js"],"names":["React","Button","Popover","PopoverHeader","PopoverBody","Card","CardBody","CardTitle","Row","Col","PopoverItem","props","toggle","bind","state","setState","popoverOpen","id","item","text","placement","Component","PopoverComponent","popovers","map","popover","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button,\r\n  Popover,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nclass PopoverItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      'popoverOpen': false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      'popoverOpen': !this.state.popoverOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Button className=\"mr-1\" color=\"secondary\" id={`Popover-${this.props.id}`} onClick={this.toggle}>\r\n          {this.props.item.text}\r\n        </Button>\r\n        <Popover placement={this.props.item.placement} isOpen={this.state.popoverOpen} target={`Popover-${this.props.id}`} toggle={this.toggle}>\r\n          <PopoverHeader>Popover Title</PopoverHeader>\r\n          <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\r\n        </Popover>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nclass PopoverComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      'popovers': [\r\n        {\r\n          'placement': 'top',\r\n          'text': 'Top'\r\n        },\r\n        {\r\n          'placement': 'bottom',\r\n          'text': 'Bottom'\r\n        },\r\n        {\r\n          'placement': 'left',\r\n          'text': 'Left'\r\n        },\r\n        {\r\n          'placement': 'right',\r\n          'text': 'Right'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs=\"12\" md=\"12\">\r\n            <Card>\r\n              <CardTitle className=\"bg-light border-bottom p-3 mb-0\">\r\n                <i className=\"mdi mdi-priority-high mr-2\"> </i>\r\n                Popovers\r\n                </CardTitle>\r\n              <CardBody>\r\n                {this.state.popovers.map((popover, i) => <PopoverItem key={i} item={popover} id={i} />)}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopoverComponent;\r\n"]},"metadata":{},"sourceType":"module"}