{"ast":null,"code":"import _objectWithoutProperties from \"/Users/bryanmurcia/Documents/GitHub/artax-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/bryanmurcia/Documents/GitHub/artax-app/src/routes/PrivateRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from '../jwt/_services';\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      var currentUser = authenticationService.currentUserValue;\n\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/authentication/login',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        });\n      } // authorised so return component\n\n\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/bryanmurcia/Documents/GitHub/artax-app/src/routes/PrivateRoutes.js"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","Component","component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SACxB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AAC9B,UAAMC,WAAW,GAAGN,qBAAqB,CAACO,gBAA1C;;AACA,UAAI,CAACD,WAAL,EAAkB;AACd;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEE,YAAAA,QAAQ,EAAE,uBAAZ;AAAqCC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAA5C,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAL6B,CAO9B;;;AACA,aAAO,oBAAC,SAAD,oBAAeN,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;AAAA,CAArB;AAaP,eAAeJ,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authenticationService } from '../jwt/_services';\r\n\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/authentication/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}